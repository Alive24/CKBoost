# User Verification Transaction Skeleton
# SSRI Method: verify_user(user_id, verification_data, verification_level?)
# Creates or updates user verification status and reputation score

Inputs:
  protocol-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Protocol cell managing user verification system
    type: ckboost-protocol-type
      args: <protocol_type_args>
      rules: Must contain valid protocol state and verification configuration
    data: <ProtocolData: verification_config, total_verified_users, reputation_system_config>
    capacity: <protocol_operational_capacity>
    
  user-cell:
    lock: secp256k1_blake160
      args: <user_lock_hash>
      rules: Must be signed by user being verified
    type: null
      args: null
      rules: CKB for verification fees and cell creation
    data: null
    capacity: <verification_fee + cell_creation_cost + transaction_fees>
    
  # Optional: Existing user verification cell (if updating existing verification)
  existing-verification-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Existing user verification to be updated (optional)
    type: ckboost-protocol-type
      args: <user_verification_type_args>
      rules: Current user verification data to be updated (optional)
    data: <UserVerificationData: user_id, current_verification_level, current_reputation_score, participation_history>
    capacity: <verification_occupied_capacity>

Outputs:
  unchanged-protocol-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Same lock as input protocol cell
    type: ckboost-protocol-type
      args: <protocol_type_args>
      rules: Protocol data remains unchanged (read-only validation)
    data: <ProtocolData: verification_config, total_verified_users, reputation_system_config>
    capacity: <protocol_operational_capacity>
    
  user-verification-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: New or updated user verification cell controlled by protocol lock
    type: ckboost-protocol-type
      args: <user_verification_type_args>
      rules: User verification type script validates verification operations
    data: <UserVerificationData: user_id, updated_verification_level, updated_reputation_score, updated_participation_history, verification_timestamp>
    capacity: <verification_occupied_capacity>
    
  change-cell:
    lock: secp256k1_blake160
      args: <user_lock_hash>
      rules: Returns excess capacity to user
    type: null
      args: null
      rules: Standard change cell
    data: null
    capacity: <excess_capacity>

HeaderDeps:
  recent-header:
    Required for transaction validity window and verification timestamp

CellDeps:
  ckboost-protocol-type-dep:
    Required for protocol type script execution and validation
    
  ckboost-protocol-lock-dep:
    Required for protocol lock script validation
    
  secp256k1-dep:
    Required for user signature verification

Witnesses:
  0: <user_signature: signs transaction hash for verification request authorization>
  1: <verification_proof_data: evidence supporting user verification level (identity docs, social proof, etc.)>
  2: <reputation_calculation_data: proof of reputation score calculation based on participation history>
  3: <verification_level_justification: justification for requested verification level based on provided evidence>
