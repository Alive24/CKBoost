# Treasury Proposal Voting Transaction Skeleton
# SSRI Method: vote_on_proposal(proposal_id, vote_choice, voter_info)
# Enables community voting on treasury proposals with reputation-weighted voting

Inputs:
  proposal-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Proposal cell being voted on
    type: ckboost-protocol-type
      args: <proposal_type_args>
      rules: Must be active proposal within voting period
    data: <ProposalData: id, proposer, description, requested_amount, requested_assets, current_voting_info, status=active, created_at, voting_deadline>
    capacity: <proposal_operational_capacity>
    
  voter-cell:
    lock: secp256k1_blake160
      args: <voter_lock_hash>
      rules: Must be signed by voter
    type: null
      args: null
      rules: CKB for voting fees
    data: null
    capacity: <voting_fee + transaction_fees>
    
  voter-verification-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Voter verification for reputation-weighted voting
    type: ckboost-protocol-type
      args: <user_verification_type_args>
      rules: Contains voter verification and reputation data for vote weighting
    data: <UserVerificationData: user_id, verification_level, reputation_score, participation_history>
    capacity: <verification_occupied_capacity>

Outputs:
  updated-proposal-cell:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Same lock as input proposal cell
    type: ckboost-protocol-type
      args: <proposal_type_args>
      rules: Must maintain proposal invariants and update voting status
    data: <ProposalData: id, proposer, description, requested_amount, requested_assets, updated_voting_info, status=active, created_at, voting_deadline>
    capacity: <proposal_operational_capacity>
    
  unchanged-voter-verification:
    lock: ckboost-protocol-lock
      args: <protocol_lock_args>
      rules: Voter verification remains unchanged (read-only for reputation weighting)
    type: ckboost-protocol-type
      args: <user_verification_type_args>
      rules: Verification data unchanged - used only for vote weight calculation
    data: <UserVerificationData: unchanged verification data>
    capacity: <verification_occupied_capacity>
    
  change-cell:
    lock: secp256k1_blake160
      args: <voter_lock_hash>
      rules: Returns excess capacity to voter
    type: null
      args: null
      rules: Standard change cell
    data: null
    capacity: <excess_capacity>

HeaderDeps:
  recent-header:
    Required for transaction validity window and voting timestamp

CellDeps:
  ckboost-protocol-type-dep:
    Required for protocol type script execution and validation
    
  ckboost-protocol-lock-dep:
    Required for protocol lock script validation
    
  secp256k1-dep:
    Required for voter signature verification

Witnesses:
  0: <voter_signature: signs transaction hash for voting authorization>
  1: <vote_choice_data: vote choice (for/against) and reasoning metadata>
  2: <reputation_weight_proof: proof of voter reputation score for weighted voting>
  3: <voting_eligibility_validation: proof of voter eligibility and voting deadline compliance>
