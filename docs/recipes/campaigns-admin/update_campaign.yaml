# Campaign Creation Transaction Skeleton
# SSRI Method: create_campaign(metadata, funding_config, initial_funding?, nft_assets?, udt_assets?)
# Creates new campaigns with optional initial funding and multi-asset reward setup
# Approval of campaign creation should be done in another transaction.
# If adding NFT or UDT funding, the campaign-cell doesn't need to be consumed. Just lock them to the campaign cell.

Inputs:
  creator-cell:
    lock: creator_lock
      args: <creator_lock_hash>
      rules: Must be signed by campaign creator
    type: null
      args: null
      rules: Standard CKB cell for campaign creation and optional initial funding
    data: null
    capacity: <campaign_creation_fee + optional_initial_CKB_funding + transaction_fees>
    
  # Optional: NFT assets to fund campaign with
  nft-funding-cells:
    lock: creator_lock
      args: <creator_lock_hash>
      rules: Optional NFT assets for campaign funding (if provided)
    type: spore
      args: <nft_type_args>
      rules: NFT assets to be managed by campaign (optional)
    data: <Spore NFT data>
    capacity: <nft_occupied_capacity>
    
  # Optional: UDT assets to fund campaign with  
  udt-funding-cells:
    lock: creator_lock
      args: <creator_lock_hash>
      rules: Optional UDT assets for campaign funding (if provided)
    type: xudt
      args: <udt_type_args>
      rules: UDT assets to be managed by campaign (optional)
    data: <uint128: UDT amount>
    capacity: <udt_occupied_capacity>
    
Outputs:
  campaign-cell:
    lock: creator_lock
      args: <creator_lock_args>
      rules: Give admin to campaign creator
    type: ckboost-campaign-type
      args: <ckboost-protocol-cell-type-hash> + <Type ID>
      rules: 
        - Type script validates campaign operations
        - Use Type ID mechanism to ensure uniqueness.
        - Must verify script code hash.
    data: <CampaignData>
    capacity: <campaign_cell_occupied_capacity + optional_initial_CKB_funding_amount>
    
  # Optional: NFT assets transferred to campaign control
  nft-locked-to-campaign-cells:
    lock: ckboost-campaign-lock
      args: <campaign-cell-type-hash>
      rules: NFT assets controlled by campaign (if NFTs provided)
    type: spore
      args: <nft_type_args>
    data: <Spore NFT data>
    capacity: <nft_occupied_capacity>
    
  # Optional: UDT assets transferred to campaign control
  udt-locked-to-campaign-cells:
    lock: ckboost-campaign-lock
      args: <campaign-cell-type-hash>
      rules: UDT assets controlled by campaign (if UDTs provided)
    type: xudt
      args: <udt_type_args>
    data: <uint128: UDT amount>
    capacity: <udt_occupied_capacity>
    
CellDeps:
  ckboost-campaign-type-dep:
    Required for campaign type script execution and validation
    
  ckboost-campaign-lock-dep:
    Required for campaign lock script validation
    
  spore-type-dep:
    Required for NFT type script execution (if NFT assets provided)
    
  xudt-type-dep:
    Required for UDT type script execution (if UDT assets provided)
    
  creator-lock-dep:
    Required for creator signature verification

Witnesses:
  0: <creator_signature: signs transaction hash for campaign update authorization>