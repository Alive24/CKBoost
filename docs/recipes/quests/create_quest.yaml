# Quest Creation Transaction Skeleton
# SSRI Method: create_quest(campaign_id, quest_data, ckb_rewards?, nft_rewards?, udt_rewards?)
# Creates new quest with mixed reward types (CKB + NFT + UDT) in single transaction

Inputs:
  campaign-cell:
    lock: ckboost-campaign-lock
      args: <campaign_creator_hash>
      rules: Campaign cell that will contain the new quest
    type: ckboost-campaign-type
      args: <campaign_type_args>
      rules: Must be active campaign with available funding to support quest rewards
    data: <CampaignData: id, creator, metadata, funding_info, quest_count, status=active>
    capacity: <campaign_funding_capacity>
    
  quest-creation-fee:
    lock: secp256k1_blake160
      args: <creator_lock_hash>
      rules: Must be signed by quest creator
    type: null
      args: null
      rules: CKB for quest cell creation and fees (plus optional CKB rewards)
    data: null
    capacity: <quest_creation_fee + optional_ckb_rewards + transaction_fees>
    
  # Optional: NFT assets for quest rewards
  nft-reward-cells:
    lock: secp256k1_blake160
      args: <creator_lock_hash>
      rules: Optional NFT assets for quest rewards (if provided)
    type: spore
      args: <nft_type_args>
      rules: NFT assets to be escrowed as quest rewards (optional)
    data: <Spore NFT data>
    capacity: <nft_occupied_capacity>
    
  # Optional: UDT assets for quest rewards
  udt-reward-cells:
    lock: secp256k1_blake160
      args: <creator_lock_hash>
      rules: Optional UDT assets for quest rewards (if provided)
    type: xudt
      args: <udt_type_args>
      rules: UDT assets to be escrowed as quest rewards (optional)
    data: <uint128: UDT amount>
    capacity: <udt_occupied_capacity>

Outputs:
  updated-campaign-cell:
    lock: ckboost-campaign-lock
      args: <campaign_creator_hash>
      rules: Same lock as input campaign cell
    type: ckboost-campaign-type
      args: <campaign_type_args>
      rules: Must maintain campaign invariants and update quest count
    data: <CampaignData: id, creator, metadata, funding_info, increased_quest_count, status=active>
    capacity: <campaign_funding_capacity>
    
  quest-cell:
    lock: ckboost-campaign-lock
      args: <campaign_creator_hash>
      rules: New quest cell controlled by campaign lock
    type: ckboost-campaign-type
      args: <quest_type_args>
      rules: New quest with combined asset rewards
    data: <QuestData: new_id, campaign_id, creator, requirements, asset_rewards[CKB + NFT + UDT], status=created, funding_required, created_at>
    capacity: <quest_operational_capacity + ckb_rewards>
    
  # Optional: NFT assets escrowed for quest rewards
  nft-escrow-cells:
    lock: ckboost-campaign-lock
      args: <campaign_creator_hash>
      rules: NFT assets held in escrow for quest completion (optional)
    type: spore
      args: <nft_type_args>
      rules: Same NFT type as input, now under quest control
    data: <Spore NFT data>
    capacity: <nft_occupied_capacity>
    
  # Optional: UDT assets escrowed for quest rewards
  udt-escrow-cells:
    lock: ckboost-campaign-lock
      args: <campaign_creator_hash>
      rules: UDT assets held in escrow for quest completion (optional)
    type: xudt
      args: <udt_type_args>
      rules: Same UDT type as input, now under quest control
    data: <uint128: UDT amount>
    capacity: <udt_occupied_capacity>
    
  change-cell:
    lock: secp256k1_blake160
      args: <creator_lock_hash>
      rules: Returns excess capacity to quest creator
    type: null
      args: null
      rules: Standard change cell
    data: null
    capacity: <excess_capacity>

HeaderDeps:
  recent-header:
    Required for transaction validity window and quest creation timestamp

CellDeps:
  ckboost-campaign-type-dep:
    Required for campaign and quest type script execution and validation
    
  ckboost-campaign-lock-dep:
    Required for campaign lock script validation
    
  spore-type-dep:
    Required for NFT type script execution and validation (if NFT rewards provided)
    
  xudt-type-dep:
    Required for UDT type script execution and validation (if UDT rewards provided)
    
  secp256k1-dep:
    Required for creator signature verification

Witnesses:
  0: <creator_signature: signs transaction hash for quest creation authorization>
  1: <quest_metadata: JSON metadata for quest description, requirements, success criteria>
  2: <reward_specification: details about CKB/NFT/UDT rewards and distribution rules>
  3: <campaign_validation_proof: proof that campaign can support the quest and has sufficient funding>
